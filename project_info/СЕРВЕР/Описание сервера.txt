
Этот документ содержит информацию о настройке сервера, управления сервисами для Telegram-бота и автоматического бэкапа, а также перечень полезных команд для работы с сервером.

---

## 1. Доступ к серверу

- **SSH-подключение:**
  ssh root@217.114.11.131

- **Пароль:**
  7jPaG)m7w(WU

***SQL***
   oracule SQL
  baker22.92@mail.ru
  Misha2803122227!

MySQL User Name: bestprice_user   ДЛЯ ВХОДА В сАМ  sQL your_secure_password
Host: localhost
Password: your_secure_password

111 (замени на свой пароль)
Role: DB Admin (или DB Owner)

---

## 2. Работа с GitHub

### Данные для доступа к репозиторию

- **Ссылка для регистрации/входа:** https://github.com/signup
- **Имя пользователя:** kabshanov
- **Пароль:** Misha2803122227
- **Personal Access Token:** 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

### Команды для обновления проекта

1. Перейти в директорию проекта:
   cd /root/botprice

2. Обновить файлы из репозитория:
   git pull origin main

---

## 3. Виртуальное окружение Python

- **Активация:** (работает только в папке `botprice`)
  source venv/bin/activate

- **Деактивация:**
  deactivate

---

## 4. Сервисы проекта

### 4.1. Сервис для Telegram-бота

редактировать sudo nano /etc/systemd/system/bot.service


Этот сервис обеспечивает постоянный запуск Telegram-бота с автозапуском и перезапуском в случае сбоев.

- **Файл:** /etc/systemd/system/bot.service
- **Содержимое:**
  [Unit]
  Description=My Telegram Bot
  After=network.target

  [Service]
  User=root
  WorkingDirectory=/root/botprice
  ExecStart=/root/botprice/venv/bin/python3 /root/botprice/bot.py
  Restart=always

  [Install]
  WantedBy=multi-user.target

- **Полезные команды:**
  - Запуск: sudo systemctl start bot.service
  - Остановка: sudo systemctl stop bot.service
  - Перезапуск: sudo systemctl restart bot.service
  - Проверка статуса: sudo systemctl status bot.service

---

### 4.2. Сервис и таймеры для автоматического бэкапа на Google Диск

Бэкап базы данных `my_database.db` (расположенной в `/root/botprice/my_database.db`) выполняется с помощью Python-скрипта `backup.py`,
который загружает файл **непосредственно** на Google Диск. Для автоматического запуска скрипта по расписанию используются **два таймера** systemd — в 01:00 и в 13:00.

#### 4.2.1. Сервис для бэкапа

- **Файл:** `/etc/systemd/system/backup.service`
- **Содержимое**:
  [Unit]
  Description=Backup my_database.db

  [Service]
  Type=oneshot
  ExecStart=/root/botprice/venv/bin/python3 /root/botprice/backup.py

Этот сервис запускает ваш скрипт `backup.py`, который загружает базу на Google Диск.

#### 4.2.2. Два таймера для бэкапа

1. **Файл:** `/etc/systemd/system/backup-01.timer`
   [Unit]
   Description=Backup my_database.db at 01:00

   [Timer]
   OnCalendar=*-*-* 01:00:00
   Persistent=true
   Unit=backup.service

   [Install]
   WantedBy=timers.target

2. **Файл:** `/etc/systemd/system/backup-13.timer`
   [Unit]
   Description=Backup my_database.db at 13:00

   [Timer]
   OnCalendar=*-*-* 13:00:00
   Persistent=true
   Unit=backup.service

   [Install]
   WantedBy=timers.target

#### 4.2.3. Активация таймеров

sudo systemctl daemon-reload
sudo systemctl enable backup-01.timer
sudo systemctl enable backup-13.timer
sudo systemctl start backup-01.timer
sudo systemctl start backup-13.timer

#### 4.2.4. Проверка расписания таймеров

systemctl list-timers --all

Здесь вы должны увидеть **два** запланированных запуска:
- `backup-01.timer` → каждый день в 01:00
- `backup-13.timer` → каждый день в 13:00

#### 4.2.5. Просмотр логов сервиса бэкапа

journalctl -u backup.service

---

## 5. Полезные команды

- **Перезагрузка systemd (после изменения сервисов или таймеров)**:
  sudo systemctl daemon-reload

- **Просмотр всех таймеров**:
  systemctl list-timers --all

- **Просмотр логов системы**:
  journalctl -xe

- **Обновление системы (Ubuntu/Debian)**:
  sudo apt update && sudo apt upgrade

- **Мониторинг ресурсов**:
  top или htop

---

## Краткий итог

- **Сервис для бота** (`bot.service`) отвечает за работу Telegram-бота.
- **Сервис для бэкапа** (`backup.service`) выполняет скрипт `backup.py`, загружающий базу на Google Диск.
- **Два таймера** (`backup-01.timer` и `backup-13.timer`) запускают бэкап **ежедневно** в 01:00 и 13:00.
- **Google Диск**: бэкап-сервис использует credentials сервисного аккаунта.
- **Полезные команды** перечислены выше для работы с SSH, Git, systemd и скачивания файлов.

Этот документ поможет вам быстро ориентироваться в настройке сервера и управлении сервисами.
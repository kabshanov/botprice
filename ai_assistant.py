"""
Conversation-handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /ai_assistant
(—Å–æ–≤–º–µ—Å—Ç–∏–º —Å python-telegram-bot v20+)

–ê–ª–≥–æ—Ä–∏—Ç–º:
1. /ai_assistant         ‚Üí –ø—Ä–æ—Å–∏–º –ø—Ä–∏—Å–ª–∞—Ç—å *—ç—Ç–∞–ª–æ–Ω* (–ø—Ä–∏–º–µ—Ä/—à–∞–±–ª–æ–Ω)
2. –ø–æ–ª—É—á–∞–µ–º —ç—Ç–∞–ª–æ–Ω       ‚Üí –ø—Ä–æ—Å–∏–º –ø—Ä–∏—Å–ª–∞—Ç—å *—Å—ã—Ä–æ–π* –ø—Ä–∞–π—Å-–ª–∏—Å—Ç
3. –ø–æ–ª—É—á–∞–µ–º —Å—ã—Ä–æ–π –ø—Ä–∞–π—Å  ‚Üí –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–∞ —Ç–µ–∫—Å—Ç–∞ –≤ GigaChat
   –ø–æ–∫–∞ –∂–¥—ë–º ‚Äî —Å–æ–æ–±—â–µ–Ω–∏–µ ¬´‚öôÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞‚Ä¶¬ª
4. –ø—Ä–∏—Å—ã–ª–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≥–æ—Ç–æ–≤—ã–π, –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
"""

from __future__ import annotations

import asyncio
from enum import IntEnum
from typing import Final

from telegram import Update
from telegram.ext import (
    CommandHandler,
    MessageHandler,
    ContextTypes,
    ConversationHandler,
    filters,
)
from telegram.helpers import escape

from gigachat_client import SYSTEM_PROMPT, chat_completion  # ‚Üê –≤–∞—à –∫–ª–∏–µ–Ω—Ç GigaChat

__all__ = ["register_ai_assistant"]

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ STATES ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
class AiStates(IntEnum):
    """–≠—Ç–∞–ø—ã —Ä–∞–±–æ—Ç—ã ConversationHandler."""

    WAIT_TEMPLATE = 1  # –∂–¥—ë–º —ç—Ç–∞–ª–æ–Ω-–ø—Ä–∏–º–µ—Ä
    WAIT_RAW = 2  # –∂–¥—ë–º ¬´—Å—ã—Ä–æ–π¬ª –ø—Ä–∞–π—Å


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ HANDLERS ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
async def start_ai_assistant(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–®–∞–≥ 1 ‚Äî –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —ç—Ç–∞–ª–æ–Ω-–ø—Ä–∏–º–µ—Ä."""

    raw_html = (
        "<b><u>ü§ñ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç</u></b>\n\n"
        "–ü—Ä–∏—à–ª–∏—Ç–µ <b>–¥–≤–∞</b> —Å–æ–æ–±—â–µ–Ω–∏—è:\n"
        "1. üìù <u>–≠—Ç–∞–ª–æ–Ω</u> ‚Äî –∫–∞–∫ –¥–æ–ª–∂–µ–Ω –≤—ã–≥–ª—è–¥–µ—Ç—å <b>–≥–æ—Ç–æ–≤—ã–π</b> –ø—Ä–∞–π—Å-–ª–∏—Å—Ç;\n"
        "2. üìÑ <u>–°—ã—Ä–æ–π</u> –ø—Ä–∞–π—Å, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å.\n\n"
        "–ß—Ç–æ–±—ã –ø—Ä–µ—Ä–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥ ‚Äî /cancel üö´"
    )
    await update.message.reply_html(raw_html)
    return AiStates.WAIT_TEMPLATE


async def receive_template(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–®–∞–≥ 2 ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º —à–∞–±–ª–æ–Ω, –ø—Ä–æ—Å–∏–º ¬´—Å—ã—Ä–æ–π¬ª –ø—Ä–∞–π—Å."""

    context.user_data["ai_template"] = update.message.text
    await update.message.reply_html(
        "‚ú® <b><u>–û—Ç–ª–∏—á–Ω–æ!</u></b> –¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ üìÑ <b><u>—Å—ã—Ä–æ–π</u></b> –ø—Ä–∞–π—Å-–ª–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å."
    )
    return AiStates.WAIT_RAW


async def receive_raw(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–®–∞–≥ 3 ‚Äî –≤—ã–∑—ã–≤–∞–µ–º GigaChat, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""

    template: str | None = context.user_data.pop("ai_template", None)
    raw: str = update.message.text

    if not template:
        await update.message.reply_html("üòï –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ: /ai_assistant")
        return ConversationHandler.END

    # –∑–∞–≥–ª—É—à–∫–∞ ¬´–û–±—Ä–∞–±–æ—Ç–∫–∞‚Ä¶¬ª
    processing = await update.message.reply_html("‚öôÔ∏è <i>–û–±—Ä–∞–±–æ—Ç–∫–∞‚Ä¶</i>")

    messages = [
        SYSTEM_PROMPT,
        {"role": "user", "content": template},
        {"role": "user", "content": raw},
    ]

    try:
        formatted: str = await asyncio.to_thread(chat_completion, "GigaChat-Pro", messages)
        safe_text = escape(formatted)
        await processing.edit_text(safe_text, parse_mode="HTML")
    except Exception as exc:
        await processing.edit_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ AI: {escape(str(exc))}\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            parse_mode="HTML",
        )

    return ConversationHandler.END


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """/cancel ‚Äî –¥–æ—Å—Ä–æ—á–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞."""

    context.user_data.pop("ai_template", None)
    await update.message.reply_html("üö´ <b>–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.</b>")
    return ConversationHandler.END


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ REGISTRATION ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

def register_ai_assistant(application) -> None:
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç ConversationHandler –≤ –æ–±—ä–µ–∫—Ç–µ application."""

    conv: Final = ConversationHandler(
        entry_points=[CommandHandler("ai_assistant", start_ai_assistant)],
        states={
            AiStates.WAIT_TEMPLATE: [MessageHandler(filters.TEXT & ~filters.COMMAND, receive_template)],
            AiStates.WAIT_RAW: [MessageHandler(filters.TEXT & ~filters.COMMAND, receive_raw)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
        name="ai_assistant_conversation",
        persistent=False,
    )
    application.add_handler(conv)